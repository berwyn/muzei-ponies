buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    jcenter()
    mavenCentral()
    google()
}

dependencies {
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'

    implementation 'com.google.android:flexbox:1.1.0'
    implementation 'com.google.android.apps.muzei:muzei-api:3.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.squareup.moshi:moshi:1.7.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.jakewharton:butterknife:9.0.0-rc1'

    kapt 'com.jakewharton:butterknife-compiler:9.0.0-rc1'

    def work_version = '1.0.0'
    implementation "androidx.core:core:$work_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.fragment:fragment:$work_version"
    implementation "androidx.appcompat:appcompat:$work_version"
    implementation "androidx.preference:preference:$work_version"
    implementation "androidx.recyclerview:recyclerview:$work_version"

    def work_version_ktx = '1.0.0-alpha10'
    implementation "android.arch.work:work-runtime-ktx:$work_version_ktx"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

// Manifest version information!
def versionMajor = 2
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def isTravis = "true" == System.getenv("TRAVIS")
def preDexEnabled = "true" == System.getProperty("pre-dex", "true")

def packageName = 'so.codeweaver.muzei.ponies'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId packageName
        minSdkVersion 19
        targetSdkVersion 28

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "PACKAGE_NAME", "\"${packageName}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
        }
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
    }
}
